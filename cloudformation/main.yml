Parameters:
  BucketName:
    Type: String
    Default: my-bucket
  
  LambdaCodeBucket:
    Type: String
    Default: my-lambda-code-bucket

Resources:

  ImageBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:* 
            Function: !GetAtt MyFunction.Arn

  LambdaCodeBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref LambdaCodeBucket

  AnalyzeFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref LambdaCodeBucket
        S3Key: lambda-code.zip
      Handler: index.handler
      Runtime: python3.8
      Role: !GetAtt AnalyzeLambdaRole.Arn

  AnalyzeLambdaRole:
     Type: AWS::IAM::Role
     Properties:
       AssumeRolePolicyDocument:
         Version: '2012-10-17'
         Statement:
           - Effect: Allow
             Principal:
               Service:
                 - lambda.amazonaws.com
             Action:
               - 'sts:AssumeRole'
       Policies:
         - PolicyName: logs
           PolicyDocument:
             Version: '2012-10-17'
             Statement:
               - Effect: Allow
                 Action:
                   - 'logs:CreateLogGroup'
                   - 'logs:CreateLogStream'
                   - 'logs:PutLogEvents'
                 Resource:
                   - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/AnalyzeFunction:*'